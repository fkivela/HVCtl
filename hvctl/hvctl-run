#!/usr/bin/env python3
"""This is the main script used to run HVCtl."""

import argparse
import sys

import config
from queuefile import QueueFile
from command_line_ui import CommandLineUI
from virtualhv import VirtualHV

# The argparse module hepls with parsing command line arguments.
# The -h option displays an automatically generated help message.
parser = argparse.ArgumentParser(description='This script runs HVCtl')

# Some options.
parser.add_argument('-v', '--virtual', help='use a virtual HV PSU',
                    action='store_true')
parser.add_argument('-s', '--simple', help='use a simple command-line UI',
                    action='store_true')

args = parser.parse_args()

if args.simple:
    inputfile = sys.stdin
    outputfile = sys.stdout
else:
    # If args.simple is specified, AdvancedTUI is not imported.
    # This makes it possible to run the program without installing 
    # urwid.
    from advanced_tui import AdvancedTUI
    inputfile = QueueFile(block=True)
    outputfile = QueueFile()    
    
cmd_line_ui = CommandLineUI(config.SERIAL_KWARGS.copy(), inputfile, outputfile)

def run_script():
    if args.virtual:    
        with VirtualHV() as virtualhv:
            cmd_line_ui.api.serial_kwargs['port'] = virtualhv.port
            cmd_line_ui.run()
    else:
        cmd_line_ui.run()

# Use a CommandLineUI or a AdvancedTUI depending on *args*.
if args.simple:
    run = run_script
else:
    tui = AdvancedTUI(run_script, inputfile, outputfile)
    status = cmd_line_ui.api.status
    def callback():
        tui.display.set_text(str(status))
    status.callback = callback
    run = tui.run

run()